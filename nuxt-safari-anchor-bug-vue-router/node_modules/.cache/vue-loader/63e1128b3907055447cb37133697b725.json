{"remainingRequest":"/Users/daniel/nuxt-safari-anchor-bug/nuxt-safari-anchor-bug-vue-router/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daniel/nuxt-safari-anchor-bug/nuxt-safari-anchor-bug-vue-router/src/views/Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"/Users/daniel/nuxt-safari-anchor-bug/nuxt-safari-anchor-bug-vue-router/src/views/Home.vue","mtime":1626632484278},{"path":"/Users/daniel/nuxt-safari-anchor-bug/nuxt-safari-anchor-bug-vue-router/node_modules/cache-loader/dist/cjs.js","mtime":1614329285102},{"path":"/Users/daniel/nuxt-safari-anchor-bug/nuxt-safari-anchor-bug-vue-router/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1623507332817},{"path":"/Users/daniel/nuxt-safari-anchor-bug/nuxt-safari-anchor-bug-vue-router/node_modules/cache-loader/dist/cjs.js","mtime":1614329285102},{"path":"/Users/daniel/nuxt-safari-anchor-bug/nuxt-safari-anchor-bug-vue-router/node_modules/vue-loader/lib/index.js","mtime":1623507332817}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9ImhvbWUiPgogIDxwPgogICAgSXBzdW0gbW9udGVzIG5hdG9xdWUgaXBzdW0gbWF0dGlzIG5vc3RyYSBhZW5lYW4gb3JjaSBtb3JiaSBsYW9yZWV0LiBNYXR0aXMKICAgIGNvbnZhbGxpcyBkaWduaXNzaW0gZW5pbSBuZWMgY29uZ3VlIHZlbmVuYXRpcyBtYWxlc3VhZGEgbGFvcmVldCBmZWxpcz8KICAgIFVsdHJpY2llcyB2dWxwdXRhdGUgcG90ZW50aSBkYXBpYnVzIG5lYyBjdXJzdXMgcXVpcyBjcmFzLiBFcmF0IGJpYmVuZHVtCiAgICB0cmlzdGlxdWUgaGVuZHJlcml0IHZlbCBydXRydW0gcGVyIHZpdmFtdXMgZGlzLiBEaWN0dW0gZ3JhdmlkYSBiaWJlbmR1bQogICAgcGVuYXRpYnVzIGF1Y3RvciBsdWN0dXMuIENvbnViaWEgbWkgdmVoaWN1bGEgZXVpc21vZCBhLCBmYW1lcyBtZXR1cyB2YXJpdXMKICAgIHNvbGxpY2l0dWRpbiBmZXVnaWF0IGxhY3VzIHRvcnRvci4gRmF1Y2lidXMgcGhhcmV0cmEgYXQgcGFydHVyaWVudAogICAgbW9sZXN0aWUgbW9sbGlzIGlhY3VsaXMgZWdlc3RhcyBhZW5lYW4gYmliZW5kdW0gdml2ZXJyYSBtYXR0aXMgZmVybWVudHVtLgogICAgTW9sbGlzIHBsYXRlYSBlZ2VzdGFzIGxvcmVtLiBFbGl0IG9yY2kgdGVtcG9yIHB1bHZpbmFyIHRlbXB1cyBuaXNsIG5lYwogICAgbW9yYmkuIEV0IGN1bSBuZXF1ZSBwb3RlbnRpIHNjZWxlcmlzcXVlIGFudGUgdmVuZW5hdGlzIG9yY2kgZG9uZWMuIE1ldHVzCiAgICBmZXVnaWF0IGluY2VwdG9zLgogIDwvcD4KICA8cD4KICAgIEZldWdpYXQgdmVsIG51bGxhbSBkaWduaXNzaW0gdmVoaWN1bGEgcmlkaWN1bHVzIGZ1c2NlLiBQcmV0aXVtIGFwdGVudAogICAgcmlzdXMgYXJjdSBlcm9zIHBvdGVudGkgY3VyYWU7IHVsdHJpY2VzLiBQb3J0YSBuZXR1cyBmZWxpcyBpZCB2YXJpdXMKICAgIHRlbXB1cyBwaGFyZXRyYSBjb25ndWUgZGlnbmlzc2ltIGRpcy4gSXBzdW0gbGVjdHVzIHBvcnRhIG5lYy4gRGlhbSBqdXN0bwogICAgYWMgZmFjaWxpc2kgYXQgZWxlbWVudHVtIHRhY2l0aSBzZW0gbmFtIGN1YmlsaWEgbmFtIGxpdG9yYS4gVWxsYW1jb3JwZXIKICAgIHRvcnF1ZW50IGxpYmVybyBjbGFzcyBub3N0cmEhIE1ldHVzIGVsZWlmZW5kIHJob25jdXMgcHJpbWlzLgogIDwvcD4KICA8cD4KICAgIFNjZWxlcmlzcXVlIHZlc3RpYnVsdW0gc2VtIHVsdHJpY2llcyBuZXR1cyBjb25zZWN0ZXR1ciBwb3RlbnRpIHBsYWNlcmF0CiAgICBncmF2aWRhIGltcGVyZGlldCBwcmFlc2VudCBxdWlzcXVlLiBMYW9yZWV0LCBzaXQgcG9ydHRpdG9yIHZlbGl0IGZhbWVzCiAgICB0ZW1wb3IgaW1wZXJkaWV0IGVsZW1lbnR1bS4gTWV0dXMgcHVydXMgZG9uZWMgcG9zdWVyZSBkdWlzIG5pc2kgaXBzdW0hCiAgICBGZXVnaWF0IGRpYW0gYWRpcGlzY2luZyBzZW5lY3R1cyBuYXNjZXR1ci4gTmlzbCBsaWd1bGEgcmlkaWN1bHVzIG5hc2NldHVyCiAgICBjb251YmlhIHZlbGl0LiBMYWNpbmlhIG1hZ25hIGNvbmRpbWVudHVtIGRpcyBuaXNpIGxhY3VzIHRyaXN0aXF1ZQogICAgZWxlaWZlbmQuIE5ldHVzIGludGVnZXIsIHNvZGFsZXMgYXQ/CiAgPC9wPgogIDxwPgogICAgTmliaCByaG9uY3VzIHZlbmVuYXRpcyBsYWNpbmlhIGZldWdpYXQgcXVpcyBuaXNsLiBQcmV0aXVtLCBwcmltaXMgaW4KICAgIGluY2VwdG9zLiBPZGlvIHR1cnBpcywgZXUgZnJpbmdpbGxhIGhlbmRyZXJpdCBsZWN0dXMgZGljdHVtIG5pc2w/IE1hdHRpcwogICAgbnVsbGFtIHZlbCBjb252YWxsaXMgYXJjdSBzYWdpdHRpcyBwdWx2aW5hciBqdXN0byBkaWN0dW1zdCBkaWFtIHBsYWNlcmF0CiAgICBjdW0uIERpYW0gbmV0dXMgb2RpbyBlZ2V0IGRpYW0gcG90ZW50aSBsaWd1bGEgYW50ZSBtb2xsaXMgZmV1Z2lhdCEgQ29tbW9kbwogICAgcHJldGl1bSBmYXVjaWJ1cywgcHJhZXNlbnQgaGFiaXRhc3NlIGx1Y3R1cyBpbnRlcmR1bSBmYXVjaWJ1cyBlbmltIHNlbQogICAgZGlnbmlzc2ltIGVyYXQuIE5vc3RyYSBjdWJpbGlhIGZhY2lsaXNpcyBpbiBwb3RlbnRpIGFjY3Vtc2FuIHF1aXMKICAgIHN1c3BlbmRpc3NlIHBlciB2ZWwgZnVzY2UuIFNlbmVjdHVzIHR1cnBpcyBmZXVnaWF0IHZhcml1cyB2dWxwdXRhdGUKICAgIGVnZXN0YXMgc2VkIGFjY3Vtc2FuIGRpY3R1bXN0IGZhdWNpYnVzIGZhbWVzIGFkaXBpc2NpbmcgYWNjdW1zYW4uIExpdG9yYQogICAgdGFjaXRpIGNyYXMgZWxlbWVudHVtIGhpbWVuYWVvcyBlbmltIGRvbmVjLgogIDwvcD4KICA8cD4KICAgIE5vbiBtb250ZXMgbGlndWxhIHBlciBxdWlzIG5ldHVzIHV0IHZpdGFlIGhhYywgdXQgbmVxdWUuIE1hZ25hIGN1cmFlOwogICAgY2xhc3MgbW9yYmkgdWxsYW1jb3JwZXIgdmFyaXVzIGZhY2lsaXNpIGN1YmlsaWEgbmV0dXMgdWxsYW1jb3JwZXIgc2l0CiAgICBjdWJpbGlhLiBVbHRyaWNpZXMgdmFyaXVzIG1hc3NhIHByaW1pcyBkdWlzIHBlbmF0aWJ1cyBmZWxpcyBjb25kaW1lbnR1bQogICAgbWF1cmlzIGlkLCBkYXBpYnVzIGVyYXQuIENvbmRpbWVudHVtIHNjZWxlcmlzcXVlIHF1YW0gaGVuZHJlcml0LiBUaW5jaWR1bnQKICAgIG5hdG9xdWUgaW50ZXJkdW0gbGFjdXMgcGVyIG1vbGVzdGllIHBoYXJldHJhIG1vcmJpIHZ1bHB1dGF0ZSBtb2xsaXMgY3JhcwogICAgbGl0b3JhIHBoYXNlbGx1cy4gUmlkaWN1bHVzIGNsYXNzIHBhcnR1cmllbnQgYW1ldCB2ZW5lbmF0aXMgcmlkaWN1bHVzCiAgICB2ZW5lbmF0aXMgcHJvaW4gZGlhbS4gT3JuYXJlIGZhY2lsaXNpIGFkIG5ldHVzIHZpdGFlLiBQZXIgY3ViaWxpYSBsb3JlbSBldQogICAgaW5jZXB0b3Mgc29sbGljaXR1ZGluIGNvbnViaWEgbWFsZXN1YWRhLiBNYXR0aXMgYXVjdG9yIHByYWVzZW50IGhhYml0YW50CiAgICBhcmN1IHZlbmVuYXRpcyBsaWJlcm8gbWFlY2VuYXMgYWNjdW1zYW4uIFZlbmVuYXRpcyBsaWJlcm8gdml0YWUgcHJvaW4KICAgIG1hZWNlbmFzIG1hZ25hIHNlbS4KICA8L3A+CiAgPHA+CiAgICBTdXNwZW5kaXNzZSBzYXBpZW4gdHVycGlzIHVybmEgcHJpbWlzIHNpdCBtYWduYSBzb2xsaWNpdHVkaW4gZG9uZWMgaXBzdW0KICAgIGxvYm9ydGlzIHB1cnVzIGZhbWVzLiBMYW9yZWV0IGxvcmVtIGNsYXNzIGZhdWNpYnVzIGFsaXF1ZXQgZWxlaWZlbmQsIGluCiAgICBhcHRlbnQgdXJuYS4gUGxhdGVhIHRpbmNpZHVudCBxdWFtIGN1bSBhbnRlIHBhcnR1cmllbnQuIFRlbXB1cyBjbGFzcyBuYW0sCiAgICBmYWNpbGlzaXMgaWQuIEFsaXF1ZXQgcGhhc2VsbHVzIGxvYm9ydGlzIGRpcyBkb2xvciEgTnVuYyBjb25zZWN0ZXR1cgogICAgdmVoaWN1bGEgaGFiaXRhc3NlIGN1bSBoYWMgY2xhc3MgbmFzY2V0dXIgYW1ldCB0b3J0b3IgbmlzbC4gUHJldGl1bSBwbGF0ZWEKICAgIGZhbWVzIGluIGN1cmFlOyBhZW5lYW4gYW1ldCBhbGlxdWV0IGVyYXQgcGFydHVyaWVudCBzYXBpZW4uIEJpYmVuZHVtIHNlbQogICAgcHVydXMgY3JhcyB0ZW1wb3IgZnVzY2UgZHVpIHBvcnR0aXRvciBtYWduaXMuIExvYm9ydGlzIGNvbnNlcXVhdCBkaWFtCiAgICBlZ2VzdGFzIGFwdGVudCBjb25zZXF1YXQgY29uc2VjdGV0dXIgbnVsbGEgcGFydHVyaWVudCBub24gbGVvIGZhbWVzCiAgICBhZW5lYW4uIE5hc2NldHVyLgogIDwvcD4KICA8cD4KICAgIFNlZCwgaW50ZWdlciB0YWNpdGkgbmVjLiBQcmFlc2VudCBtYWduaXMgcGFydHVyaWVudCBjdWJpbGlhIGJsYW5kaXQgYS4gTWkKICAgIHRvcnF1ZW50IGxhY3VzIG5vc3RyYS4gTW9sbGlzIHVybmEgZmVybWVudHVtIG51bGxhbS4gRG9sb3IgYWxpcXVldCBkdWksCiAgICBwcmV0aXVtIHZlbGl0LiBGYW1lcyB2YXJpdXMgYXVndWUsIHF1aXNxdWUgbW9sZXN0aWUgZGljdHVtc3QgZGFwaWJ1cy4KICAgIExhY2luaWEgbmFzY2V0dXIgbW9udGVzIGhhYyBlbGVtZW50dW0gZmV1Z2lhdCBldGlhbSBzZWQgY2xhc3MgdWx0cmljaWVzCiAgICBxdWFtPyBBIHZ1bHB1dGF0ZSBjb25ndWUgbWF0dGlzIGxhY3VzLiBOb3N0cmEganVzdG8gYWQgZWxlbWVudHVtIGZlbGlzCiAgICB2ZWwuIFBsYWNlcmF0IGxvcmVtIHByZXRpdW0gc2VuZWN0dXMgY29uZ3VlIGVnZXN0YXMgZmF1Y2lidXMgbmF0b3F1ZSBlbGl0CiAgICB2aXZhbXVzIHNpdC4gRW5pbSB0YWNpdGkgdGluY2lkdW50IGNvbnViaWEgbWFnbmEgdGVsbHVzIGFkaXBpc2NpbmcgZXJvcwogICAgYW1ldCBmdXNjZSB2ZWxpdCBmYXVjaWJ1cyBhbGlxdWFtPyBJZCBtb2xsaXMgY3VtIHNpdCBhcHRlbnQgZGFwaWJ1cy4KICA8L3A+CiAgPHA+CiAgICBTdXNjaXBpdCBwcm9pbiBldWlzbW9kLCBtYWduYSB0YWNpdGkgcGVyLiBBZCBoYWJpdGFudCBoYWMgaW1wZXJkaWV0IGRvbG9yCiAgICBhdWd1ZSBjb25zZXF1YXQgc29jaWlzIHZvbHV0cGF0LiBTZWQgZHVpIGR1aSBzdXNjaXBpdC4gQWVuZWFuIHNhcGllbgogICAgZGljdHVtLCBoZW5kcmVyaXQgZXRpYW0gZmV1Z2lhdCBtZXR1cyBoYWMgZGlnbmlzc2ltIGlhY3VsaXMgdml0YWUKICAgIG5hc2NldHVyPyBMZWN0dXMgcmlzdXMgbWFsZXN1YWRhIGRvbG9yIGhhYyBtYXR0aXMgaW50ZXJkdW0gbW9sbGlzCiAgICB2ZW5lbmF0aXMgZG9sb3IuIE1hbGVzdWFkYSB2ZXN0aWJ1bHVtIHJpZGljdWx1cyBjdW0gZWdldCBhcHRlbnQgbGlndWxhIGluCiAgICBoZW5kcmVyaXQgaGFiaXRhc3NlIGN1cmFlOyBsb2JvcnRpcy4gTG9yZW0gYmxhbmRpdCB0ZW1wb3IgdWxsYW1jb3JwZXIgbXVzCiAgICBtYWduYSBsdWN0dXMgaGVuZHJlcml0IGZhbWVzIHRvcnRvciBsZW8gYXQgbnVsbGFtLiBBbGlxdWV0LgogIDwvcD4KICA8cD4KICAgIFRlbXBvciB0ZW1wb3IgYWxpcXVldCBjdW0gc3VzcGVuZGlzc2UgbnVuYyBzZW5lY3R1cyBwaGFyZXRyYSBwYXJ0dXJpZW50IGV1CiAgICBtZXR1cyBhYyBzdXNjaXBpdC4gRXJvcyBjbGFzcyBhZW5lYW4gcHJpbWlzIGFjIGlwc3VtPyBSaXN1cyBzb2RhbGVzIGxpdG9yYQogICAgc3VzY2lwaXQgbGl0b3JhIGRpcyB0dXJwaXMgb3JjaSBzZW1wZXIuIE5pc2wgYXB0ZW50IG5pYmggaW50ZXJkdW0sIG9ybmFyZQogICAgYWMuIEhhYml0YXNzZSBzZW0gZnJpbmdpbGxhIHRlbXBvciByaXN1cyBwdXJ1cyBmZXJtZW50dW0gbnVsbGEgc29kYWxlcy4KICAgIEhhYml0YW50IG1hZWNlbmFzIGNvbW1vZG8gYS4gSnVzdG8gc2FnaXR0aXMgbmlzbCBlbGl0IGNvbnViaWEgaGFiaXRhc3NlCiAgICBqdXN0byB2b2x1dHBhdCBwaGFzZWxsdXMsIHZvbHV0cGF0IHNpdC4gUGVsbGVudGVzcXVlIGVsaXQgbmFzY2V0dXIgdGVtcG9yCiAgICBuaXNsIHNlbXBlciB2YXJpdXMuIFB1bHZpbmFyIGxhY2luaWEgZWxlbWVudHVtIHNvY2lvc3F1IG1vbnRlcyBsaXRvcmEKICAgIG5ldHVzLiBUcmlzdGlxdWUgdXQgY3Vyc3VzIGludGVyZHVtOyBzb2RhbGVzIGFjY3Vtc2FuIG1vbGVzdGllIG51bGxhbQogICAgdGVsbHVzPyBFbmltIHZlbGl0LgogIDwvcD4KICA8aDEgaWQ9InRlc3QtYW5jaG9yIj5UZXN0IEFuY2hvcjwvaDE+CiAgPHA+CiAgICBIYWMgcGxhY2VyYXQgY29uZ3VlIHZlbmVuYXRpcyB2dWxwdXRhdGUgYWNjdW1zYW4gcGhhc2VsbHVzIHBhcnR1cmllbnQKICAgIHBlbmF0aWJ1cyB0b3JxdWVudCBzb2Npb3NxdSBwdWx2aW5hci4gRG9uZWMgY3VtIHF1YW0gY29udmFsbGlzIHJ1dHJ1bQogICAgZnJpbmdpbGxhLiBOYXNjZXR1ciBwaGFzZWxsdXMgcHJpbWlzIGVsZWlmZW5kIG51bmMgZXVpc21vZCB2aXRhZSwgbWkKICAgIHNlbmVjdHVzIG1vbnRlcyBmYWNpbGlzaSBoYWJpdGFudCBmZXVnaWF0LiBVdCBpYWN1bGlzIGxvcmVtIGp1c3RvIHBsYWNlcmF0CiAgICBhdWN0b3IuIE5pYmggaW50ZWdlciBzZW0gcHJvaW4gdWx0cmljZXMuIEV0aWFtIGZhY2lsaXNpIGN1bSBwbGFjZXJhdCBxdWlzLAogICAgdmVoaWN1bGEgbGFjdXMgbnVsbGFtIHZlc3RpYnVsdW0gdmVoaWN1bGEgcGVyIGNvbW1vZG8uIEltcGVyZGlldCBhcmN1CiAgICBpYWN1bGlzIGZhbWVzIGVyb3MgZXN0IG5hc2NldHVyIHBlciBjb21tb2RvLiBOZXR1cyBoYWJpdGFzc2UsIGR1aXMgYXJjdQogICAgZHVpcyBvZGlvIGxpdG9yYSBjdXJzdXMgY3JhcyBsb3JlbS4KICA8L3A+CjwvZGl2Pgo="},null]}